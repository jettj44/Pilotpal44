<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>PilotPal</title>
  <style>
    body {
      font-family: sans-serif;
      margin: 0;
      display: flex;
      height: 100vh;
    }
    #sidebar {
      width: 250px;
      background: #f3f3f3;
      padding: 20px;
      border-right: 1px solid #ccc;
      overflow-y: auto;
    }
    #content {
      flex: 1;
      padding: 20px;
      overflow-y: auto;
    }
    h1 {
      font-size: 24px;
      margin-top: 0;
    }
    button {
      margin: 5px 0;
      width: 100%;
      padding: 10px;
      background: #007bff;
      color: white;
      border: none;
      cursor: pointer;
    }
    button:hover {
      background: #0056b3;
    }
    .question {
      margin-bottom: 20px;
    }
    .flashcard {
      margin: 10px 0;
      background: #f9f9f9;
      border: 1px solid #ddd;
      padding: 10px;
    }
    textarea {
      width: 100%;
      height: 100px;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <div id="sidebar">
    <h1>PilotPal</h1>
    <button onclick="loadLesson('home')">üè† Home</button>
    <button onclick="loadLesson('ask')">ü§ñ Ask AI</button>
    <hr>
    <div id="lessonButtons"></div>
  </div>
  <div id="content">
    <h2>Welcome to PilotPal</h2>
    <p>Select a lesson or ask a question to begin.</p>
  </div>

  <script>
    const lessonData = {
      lesson1: {
        title: "Lesson 1: Aerodynamics",
        flashcards: [
          { q: "What are the four forces of flight?", a: "Lift, Weight, Thrust, Drag" },
          { q: "What creates lift?", a: "Air moving faster over the top of the wing" }
        ],
        question: {
          q: "What is lift?",
          options: ["The weight of the aircraft", "The forward force", "The upward force opposing weight"]
        }
      },
      lesson2: {
        title: "Lesson 2: Aircraft Systems",
        flashcards: [
          { q: "What does 'From high to low, look out below' mean?", a: "Your true altitude is lower than indicated when pressure or temperature drops." },
          { q: "What does an altimeter read in cold air?", a: "Higher than true altitude" }
        ],
        question: {
          q: "What does the altimeter read in cold air?",
          options: ["True altitude", "No change", "Higher than true altitude"]
        }
      },
      // Add lessons 3‚Äì11 with similar format
    };

    for (let i = 1; i <= 11; i++) {
      const btn = document.createElement("button");
      btn.innerText = `Lesson ${i}`;
      btn.onclick = () => loadLesson(`lesson${i}`);
      document.getElementById("lessonButtons").appendChild(btn);
    }

    function loadLesson(key) {
      if (key === 'home') {
        document.getElementById('content').innerHTML = '<h2>Welcome to PilotPal</h2><p>Select a lesson or ask a question to begin.</p>';
        return;
      }

      if (key === 'ask') {
        document.getElementById('content').innerHTML = `
          <h2>Ask PilotPal</h2>
          <textarea id="userQuestion" placeholder="Type your question here..."></textarea><br>
          <button onclick="askAI()">Ask</button>
          <div id="aiAnswer" style="margin-top: 20px;"></div>
        `;
        return;
      }

      const lesson = lessonData[key];
      if (!lesson) {
        document.getElementById('content').innerHTML = '<p>Lesson not found.</p>';
        return;
      }

      const flashcards = lesson.flashcards.map(card => `
        <div class="flashcard"><strong>Q:</strong> ${card.q}<br><strong>A:</strong> ${card.a}</div>
      `).join('');

      const question = lesson.question;
      const options = question.options.map(opt => `<input type="radio" name="q"> ${opt}<br>`).join('');

      document.getElementById('content').innerHTML = `
        <h2>${lesson.title}</h2>
        ${flashcards}
        <div class="question">
          <strong>${question.q}</strong><br>
          ${options}
        </div>
      `;
    }

    async function askAI() {
      const q = document.getElementById("userQuestion").value;
      const apiKey = prompt("Enter your OpenAI API key:");
      document.getElementById("aiAnswer").innerHTML = "Thinking...";

      try {
        const response = await fetch("https://api.openai.com/v1/chat/completions", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${apiKey}`
          },
          body: JSON.stringify({
            model: "gpt-3.5-turbo",
            messages: [{ role: "user", content: q }]
          })
        });

        const data = await response.json();
        document.getElementById("aiAnswer").innerHTML = data.choices[0].message.content;
      } catch (err) {
        console.error(err);
        document.getElementById("aiAnswer").innerHTML = "Something went wrong: " + err.message;
      }
    }
  </script>
</body>
</html>
